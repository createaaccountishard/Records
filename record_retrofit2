对retrofit2 的注解内容进行记录

第一类：HTTP请求方法

HTTP请求方法注解
____________________________________________________________________
类型               名称              备注
                   GET               分别对用于http请求的各个部分
                   POST              可以使用@path配合,定义完成的url
                   PUT               可以使用@url定义完整的url  
请求类型相关        DELETE
                   HEAD
                   OPTIONS
                   PATCH

                   HTTP              用于自定义完成的http请求的各项内容
_____________________________________________________________________


第二类 请求的标记类
____________________________________________________________________________________________________________
分类                名称             备注
                   
                   FormUrlEncoded    表示请求体是一个表单,  content-type:application/x-www-form-urlencoded
表单请求
                   MultiPart         表示请求体是一个带有文件上传的表单, content-type: multipart/form-data

响应标记            Streaming         表示响应体数据使用流的形式返回. 如果没有此标记,默认会把响应体的数据全部加载进内存.
                                     用在返回的数据量大的时候.
________________________________________________________________________________________________________________

第三类  参数标记类

________________________________________________________________________________________________________________
分类                 名称             备注
________________________________________________________________________________________________________________
作用在方法上          Headers          添加多个请求头的信息,使用key=value的形式
_________________________________________________________________________________________________________________
                     Header           添加请求头,根据参数来设置的
                     ___________________________________________________________________________________________
                     Body  
                     ____________________________________________________________________________________________
作用在方                               用于表单字段
                     Field         
法的参数上            FieldMap         Field 和FieldMap 是和FormUrlEncoded配合使用的,他们是一起出现的  
                     Part             Part和PartMap 是和Multipart 配合使用的 他们是一起出现的
                     PartMap          FieldMap的类型是Map<Sting,String>, 非string的会调用tostring 的方法
                                      PartMap的类型是Map<String,RequsetBody>,非requsetBody的会使用converter转换
                     ____________________________________________________________________________________________
                                      用于url的组合上
                     Path             经path的内容替换在url的指定位置上,使用相同的{key}来匹配
                     Query            Query和QueryMap 的数据是体现在url上的,也就是没有写在请求的正文中,而是在请求头之类的位置
                     QueryMap         QueryMap的类型Map<Sting,String>,Map<String,Iterable>,就是说支持数据和集合
                     Url              直接定义一个完成的url,不会使用baseurl
__________________________________________________________________________________________________________________




定义一个retrofit2 的接口的主要流程
__________________________________________________________________________________________________
1 http请求    确定使用那个请求的方式  @Get, @Post,@Url ,并补全url
2 参数设置    确定使用参数的方式 默认无, @FormUrlEncoded,  @Multipart,,他们分别对应了不同的参数表记类型 
                            @Query  @Field            @Part  
3 返回值设置  根据设置的adapter和converter设置返回值,是默认的 ,还是经过转换的
                                                  Call<Response>,  A<C>
                                                  
                                                  
                                                  
                                                  
___________________________________________________________________________________________________
了解 multipart/form-data

在最初的http协议中，没有定义上传文件的 Method，为了实现这个功能，http协议组改造了post请求，添加了一种post规范，
这种规范的 Content-Type就是 multipart/form-data;boundary=${bound},
其中 ${bound}是定义的分隔符，post body里需要用到,尽量保证随机唯一。

post格式如下:

--${bound}
Content-Disposition: form-data; name="Filename"
Content-Type: application/octet-stream 
Content-Length: 

--${bound}
Content-Disposition: form-data; name="file000"; filename="HTTP协议详解.pdf"
Content-Type: application/octet-stream 
Content-Length: 

......

************ 字节数据

************ 字节数据


************ 字节数据
--${bound}--


retrofit2 对 multipart/form-data的封装
在 retrofit中: 注解 retrofit2.http.Multipart标记一个请求是 multipart/form-data类型。
注解 retrofit2.http.Part代表 Multipart里的一项数据,即用 ${bound}分隔的内容块。
在 okhttp3中: 类 okhttp3.MultipartBody为 multipart/form-data的抽象封装,
继承 okhttp3.RequestBody 类 okhttp3.MultipartBody.Part为 multipart/form-data里的一项数据。
package com.chenkaihua.oneschedule.net;
import java.util.List;import okhttp3.MultipartBody;
import retrofit2.http.Body;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.Multipart;
import retrofit2.http.POST;
import retrofit2.http.Part;
/** * Created by chenkh on 16-4-2. */
public interface FileService {
/** 
* 通过 List<MultipartBody.Part> 传入多个part实现多文件上传 
* @param parts 每个part代表一个 
* @return 状态信息 */
@Multipart 
@POST("users/image") 
BaseResponse<String> uploadFilesWithParts(@Part() List<MultipartBody.Part> parts);
/** 
* 通过 MultipartBody和@body作为参数来上传 
* @param multipartBody MultipartBody包含多个Part 
* @return 状态信息 
*/ 
@POST("users/image")
BaseResponse<String> uploadFileWithRequestBody(@Body MultipartBody multipartBody);}
