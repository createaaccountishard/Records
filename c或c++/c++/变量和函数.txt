
1 变量的声明和初始化
类型 名字 变量名;  int a;   多个同类型的声明使用,隔开.
类型 名字 变量名=变量值; int a=12;  赋值的时候也是用,隔开.


2 变量的默认初始值

根据变量声明位置的不同,可能会有不同的初始值,即只声明未初始化时

局部变量 有值,使用时不会报错.一般同全局变量,部分条件下是一个较大的数;通常下编译器会提示未初始化
全局变量 有默认的值,可以是数字0,或者NULL
形参   等于输入的值

值的规律:
如果是数,为0;
如果是char 为[]='\0'=0; 
如果是string 为 空= "";
如果是bool 为 0;

不建议使用系统的默认值,无论在哪里都请手动初始化


3 函数的声明

要使用的函数需要在main函数前声明,如果未声明而放在后面,使用时是报错的.
所以有函数的声明后,其实现可以放在任何位置.
如果没有必须放在前面.

函数必须有返回值,形参可以输入void ,表示无参数,调用的时候不用传入参数

void test();// 如果没有这个则报错

int main() {

test();


    return 0;
}



void  test(){
    cout<< " test "<<endl;
}



4 c/c++ 的头文件和实现文件

文件名.c /文件名.cpp 是实现文件,前者c  后者c++
文件名.h            是两者的头文件,主要定义变量和函数;

头文件和实现文件具有相同的文件名,可以放在不同的目录,但要是同1个项目下.

使用预处理命令#include "" 导入自定义的文件

5 常量

由const 修饰的变量不可以修改;

对于非指针 const 类型 变量名 =值;等效于 类型 const 变量名=值

对于指针   这两种描述是不同的.具体的在指针中说明
          指针还有 const int * const a=值;的写法

字符串常量:
可以直接写出 "123213" 而不是用变量名,但是只在固定的地方有用,例如 cout<< "123";

使用预处理命令进行声明
 #define 名称  值   ;中间没有=


6 函数补充

 函数可以有默认值, 有默认值的可以在调用的时候少传1个参数. 默认值要放在没有默认值的后面

